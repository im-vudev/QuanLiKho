@page "/nhapkho/edit-detail/{id:int}"
@using Models
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="container">
    <h3>Hiệu Chỉnh Chi Tiết Phiếu Nhập</h3>

    @if (nhapKho == null || chiTietNhapKhos == null || sanPhams == null)
    {
        <p><em>Đang tải...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                <h4>Thông Tin Phiếu Nhập</h4>
                <div class="form-group">
                    <label for="soPhieuNhap">Số Phiếu Nhập:</label>
                    <span>@nhapKho.SoPhieuNhapKho</span>
                </div>
                <div class="form-group">
                    <label for="ngayNhap">Ngày Nhập:</label>
                    <span>@nhapKho.NgayNhapKho.ToString("dd/MM/yyyy")</span>
                </div>
                <div class="form-group">
                    <label for="ghiChu">Ghi Chú:</label>
                    <span>@nhapKho.GhiChu</span>
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-12">
                <h4>Danh sách Chi Tiết Phiếu Nhập</h4>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }

                <EditForm Model="@this" OnValidSubmit="SaveChanges">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Mã Sản Phẩm</th>
                                <th>Tên Sản Phẩm</th>
                                <th>Số Lượng</th>
                                <th>Đơn Giá</th>
                                <th>Trị Giá</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in chiTietNhapKhos)
                            {
                                <tr>
                                    <td>@detail.SanPhamId</td>
                                    <td>
                                        @if (detail.SanPham != null)
                                        {
                                            @detail.SanPham.Ten_San_Pham
                                        }
                                        else
                                        {
                                            <span>(Không có)</span>
                                        }
                                    </td>
                                    <td>
                                        @if (detail.AutoId == editingDetailId)
                                        {
                                            <input type="number" class="form-control w-25" @bind="editingDetail.SLNhap" />
                                            <ValidationMessage For="@(() => editingDetail.SLNhap)" />
                                        }
                                        else
                                        {
                                            <span>@detail.SLNhap</span>
                                        }
                                    </td>
                                    <td>
                                        @if (detail.AutoId == editingDetailId)
                                        {
                                            <input type="number" class="form-control w-25" @bind="editingDetail.DonGiaNhap" />
                                            <ValidationMessage For="@(() => editingDetail.DonGiaNhap)" />
                                        }
                                        else
                                        {
                                            <span>@detail.DonGiaNhap</span>
                                        }
                                    </td>
                                    <td>@(detail.SLNhap * detail.DonGiaNhap)</td>
                                    <td>
                                        @if (detail.AutoId == editingDetailId)
                                        {
                                            <button type="submit" class="btn btn-primary btn-sm">Lưu</button>
                                            <button type="button" class="btn btn-secondary btn-sm ml-1" @onclick="CancelEdit">Hủy</button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-warning btn-sm" @onclick="() => BeginEdit(detail)">Sửa</button>
                                            <button type="button" class="btn btn-danger btn-sm ml-1" @onclick="() => DeleteDetail(detail.AutoId)">Xóa</button>
                                        }
                                    </td>
                                </tr>
                            }

                            @if (isNewDetailFormVisible)
                            {
                                <tr>
                                    <td>
                                        <select class="form-control w-25" @bind="newDetail.SanPhamId">
                                            <option value="">Chọn sản phẩm</option>
                                            @foreach (var sp in sanPhams)
                                            {
                                                <option value="@sp.Auto_ID">@sp.Ten_San_Pham</option>
                                            }
                                        </select>
                                        <ValidationMessage For="@(() => newDetail.SanPhamId)" />
                                    </td>
                                    <td></td>
                                    <td>
                                        <input type="number" class="form-control w-25" @bind="newDetail.SLNhap" />
                                        <ValidationMessage For="@(() => newDetail.SLNhap)" />
                                    </td>
                                    <td>
                                        <input type="number" class="form-control w-25" @bind="newDetail.DonGiaNhap" />
                                        <ValidationMessage For="@(() => newDetail.DonGiaNhap)" />
                                    </td>
                                    <td></td>
                                    <td>
                                        <button type="submit" class="btn btn-success btn-sm">Lưu</button>
                                        <button type="button" class="btn btn-secondary btn-sm ml-1" @onclick="CancelNewDetail">Hủy</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <button type="button" class="btn btn-primary" @onclick="BeginAdd">Thêm Chi Tiết Mới</button>
                </EditForm>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private NhapKho nhapKho;
    private List<NhapKhoRawData> chiTietNhapKhos;
    private List<SanPham> sanPhams;
    private NhapKhoRawData editingDetail = new NhapKhoRawData();
    private NhapKhoRawData newDetail = new NhapKhoRawData();
    private int editingDetailId = -1;
    private bool isNewDetailFormVisible = false;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        nhapKho = await DbContext.NhapKhos
            .Include(n => n.ChiTietNhapKhos)
            .ThenInclude(c => c.SanPham)
            .FirstOrDefaultAsync(n => n.Auto_Id == Id);

        if (nhapKho != null)
        {
            chiTietNhapKhos = nhapKho.ChiTietNhapKhos.ToList();
            sanPhams = await DbContext.SanPhams.ToListAsync();
        }
    }

    private void BeginEdit(NhapKhoRawData detail)
    {
        editingDetail = new NhapKhoRawData
        {
            AutoId = detail.AutoId,
            SLNhap = detail.SLNhap,
            DonGiaNhap = detail.DonGiaNhap,
            SanPhamId = detail.SanPhamId,
            SanPham = detail.SanPham
        };
        editingDetailId = detail.AutoId;
    }

    private async Task SaveChanges()
    {
        if (editingDetailId >= 0)
        {
            await SaveEdit();
        }
        else
        {
            await SaveNewDetail();
        }
    }

    private async Task SaveEdit()
    {
        if (editingDetail.SLNhap <= 0 || editingDetail.DonGiaNhap <= 0)
        {
            errorMessage = "Số lượng và đơn giá phải lớn hơn 0.";
            return;
        }

        try
        {
            var detail = chiTietNhapKhos.FirstOrDefault(d => d.AutoId == editingDetailId);
            if (detail != null)
            {
               
                detail.SLNhap = editingDetail.SLNhap;
                detail.DonGiaNhap = editingDetail.DonGiaNhap;

               
                DbContext.Entry(detail).State = EntityState.Modified;

               
                await DbContext.SaveChangesAsync();

                
                editingDetailId = -1;
                errorMessage = string.Empty;

                
                await LoadData();
            }
            else
            {
                errorMessage = "Chi tiết phiếu nhập không tồn tại hoặc đã bị xóa.";
            }
        }
        catch (DbUpdateConcurrencyException ex)
        {
            errorMessage = "Dữ liệu đã bị thay đổi bởi người dùng khác. Vui lòng tải lại trang và thử lại.";
        }
        catch (Exception ex)
        {
            errorMessage = "Đã xảy ra lỗi khi lưu thay đổi. Vui lòng thử lại sau.";
        }
    }

    private async Task SaveNewDetail()
    {
        if (newDetail.SanPhamId == 0 || newDetail.SLNhap <= 0 || newDetail.DonGiaNhap <= 0)
        {
            errorMessage = "Vui lòng điền đầy đủ thông tin cho chi tiết mới.";
            return;
        }

        try
        {
            var newChiTietNhap = new NhapKhoRawData
                {
                    SanPhamId = newDetail.SanPhamId,
                    SLNhap = newDetail.SLNhap,
                    DonGiaNhap = newDetail.DonGiaNhap
                   
                };

           
            nhapKho.ChiTietNhapKhos.Add(newChiTietNhap);

            
            DbContext.NhapKhos.Update(nhapKho);
            await DbContext.SaveChangesAsync();

           
            isNewDetailFormVisible = false;
            newDetail = new NhapKhoRawData();
            errorMessage = string.Empty;

           
            await LoadData();
        }
        catch (Exception ex)
        {
            errorMessage = "Đã xảy ra lỗi khi thêm chi tiết mới. Vui lòng thử lại sau.";
        }
    }

    private async Task DeleteDetail(int detailId)
    {
        try
        {
            var detailToRemove = chiTietNhapKhos.FirstOrDefault(d => d.AutoId == detailId);
            if (detailToRemove != null)
            {
                
                nhapKho.ChiTietNhapKhos.Remove(detailToRemove);

                
                DbContext.NhapKhos.Update(nhapKho);
                await DbContext.SaveChangesAsync();

                
                await LoadData();
            }
            else
            {
                errorMessage = "Chi tiết phiếu nhập không tồn tại hoặc đã bị xóa.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Đã xảy ra lỗi khi xóa chi tiết phiếu nhập. Vui lòng thử lại sau.";
        }
    }

    private void BeginAdd()
    {
        isNewDetailFormVisible = true;
    }

    private void CancelEdit()
    {
        editingDetailId = -1;
        editingDetail = new NhapKhoRawData();
        errorMessage = string.Empty;
    }

    private void CancelNewDetail()
    {
        isNewDetailFormVisible = false;
        newDetail = new NhapKhoRawData();
        errorMessage = string.Empty;
    }
}
